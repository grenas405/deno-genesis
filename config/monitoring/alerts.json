{
  "alerting": {
    "description": "DenoGenesis Framework Alert Configuration",
    "version": "2.1.0",
    "lastUpdated": "2025-09-01T00:00:00Z"
  },
  "global": {
    "enableAlerting": true,
    "evaluationInterval": 30000,
    "alertCooldown": 300000,
    "maxAlertsPerHour": 20,
    "alertRetentionDays": 30,
    "enableAlertEscalation": true,
    "escalationDelay": 900000
  },
  "severity_levels": {
    "critical": {
      "priority": 1,
      "color": "#FF0000",
      "description": "System-threatening issues requiring immediate attention",
      "autoEscalate": true,
      "escalationTime": 300000
    },
    "high": {
      "priority": 2, 
      "color": "#FF6600",
      "description": "Significant issues affecting service quality",
      "autoEscalate": true,
      "escalationTime": 600000
    },
    "medium": {
      "priority": 3,
      "color": "#FFAA00", 
      "description": "Moderate issues that should be addressed soon",
      "autoEscalate": false,
      "escalationTime": 1800000
    },
    "low": {
      "priority": 4,
      "color": "#FFDD00",
      "description": "Minor issues for awareness and trending",
      "autoEscalate": false,
      "escalationTime": null
    },
    "info": {
      "priority": 5,
      "color": "#0088FF",
      "description": "Informational alerts for system changes",
      "autoEscalate": false,
      "escalationTime": null
    }
  },
  "alert_rules": {
    "framework_alerts": [
      {
        "name": "framework_integrity_failure",
        "severity": "critical",
        "condition": "framework.integrity === false",
        "description": "Framework integrity check failed",
        "message": "DenoGenesis framework integrity validation failed. System may be compromised.",
        "cooldown": 300000,
        "enabled": true,
        "actions": ["log", "notify"]
      },
      {
        "name": "framework_version_mismatch",
        "severity": "high",
        "condition": "site.versionMatch === false", 
        "description": "Site framework version does not match core framework",
        "message": "Site {{site.name}} framework version ({{site.version}}) does not match core framework ({{framework.version}})",
        "cooldown": 600000,
        "enabled": true,
        "actions": ["log", "notify"]
      },
      {
        "name": "multiple_sites_down",
        "severity": "critical",
        "condition": "sites.filter(s => s.status === 'down').length >= 2",
        "description": "Multiple sites are down simultaneously",
        "message": "{{count}} sites are currently down: {{siteNames}}",
        "cooldown": 180000,
        "enabled": true,
        "actions": ["log", "notify", "escalate"]
      }
    ],
    "site_alerts": [
      {
        "name": "site_down",
        "severity": "critical",
        "condition": "site.status === 'down'",
        "description": "Site is completely unreachable",
        "message": "Site {{site.name}} ({{site.baseUrl}}) is down and unreachable",
        "cooldown": 180000,
        "enabled": true,
        "actions": ["log", "notify", "escalate"]
      },
      {
        "name": "site_high_error_rate",
        "severity": "high",
        "condition": "site.errorRate > 10",
        "description": "Site has high error rate",
        "message": "Site {{site.name}} has error rate of {{site.errorRate}}% (threshold: 10%)",
        "cooldown": 300000,
        "enabled": true,
        "actions": ["log", "notify"]
      },
      {
        "name": "site_slow_response",
        "severity": "medium",
        "condition": "site.responseTime > 5000",
        "description": "Site response time is above acceptable threshold",
        "message": "Site {{site.name}} response time is {{site.responseTime}}ms (threshold: 5000ms)",
        "cooldown": 600000,
        "enabled": true,
        "actions": ["log"]
      },
      {
        "name": "ssl_certificate_expiry",
        "severity": "high",
        "condition": "site.ssl.daysUntilExpiry < 30",
        "description": "SSL certificate expiring soon",
        "message": "SSL certificate for {{site.name}} expires in {{site.ssl.daysUntilExpiry}} days",
        "cooldown": 86400000,
        "enabled": true,
        "actions": ["log", "notify"]
      },
      {
        "name": "health_check_failure",
        "severity": "medium",
        "condition": "site.health.status === 'unhealthy'",
        "description": "Site health check is failing",
        "message": "Health check for {{site.name}} is reporting unhealthy status",
        "cooldown": 300000,
        "enabled": true,
        "actions": ["log", "notify"]
      }
    ],
    "system_alerts": [
      {
        "name": "high_cpu_usage",
        "severity": "high",
        "condition": "system.cpuUsage > 80",
        "description": "System CPU usage is critically high",
        "message": "System CPU usage is {{system.cpuUsage}}% (threshold: 80%)",
        "cooldown": 300000,
        "enabled": true,
        "actions": ["log", "notify"]
      },
      {
        "name": "high_memory_usage",
        "severity": "high", 
        "condition": "system.memoryUsage > 85",
        "description": "System memory usage is critically high",
        "message": "System memory usage is {{system.memoryUsage}}% (threshold: 85%)",
        "cooldown": 300000,
        "enabled": true,
        "actions": ["log", "notify"]
      },
      {
        "name": "low_disk_space",
        "severity": "critical",
        "condition": "system.diskUsage > 90",
        "description": "System disk space is critically low",
        "message": "System disk usage is {{system.diskUsage}}% (threshold: 90%)",
        "cooldown": 300000,
        "enabled": true,
        "actions": ["log", "notify", "escalate"]
      },
      {
        "name": "high_load_average",
        "severity": "medium",
        "condition": "system.loadAverage[0] > 4.0",
        "description": "System load average is high",
        "message": "System 1-minute load average is {{system.loadAverage[0]}} (threshold: 4.0)",
        "cooldown": 600000,
        "enabled": true,
        "actions": ["log"]
      }
    ],
    "dependency_alerts": [
      {
        "name": "external_api_failure",
        "severity": "medium",
        "condition": "dependency.type === 'api' && dependency.status === 'unhealthy'",
        "description": "External API dependency is failing",
        "message": "External API {{dependency.name}} is unhealthy (response time: {{dependency.responseTime}}ms)",
        "cooldown": 600000,
        "enabled": true,
        "actions": ["log"]
      },
      {
        "name": "critical_service_failure",
        "severity": "critical",
        "condition": "dependency.critical === true && dependency.status === 'unhealthy'",
        "description": "Critical service dependency has failed",
        "message": "Critical service {{dependency.name}} is unhealthy and may impact system functionality",
        "cooldown": 180000,
        "enabled": true,
        "actions": ["log", "notify", "escalate"]
      },
      {
        "name": "database_connection_issues",
        "severity": "high",
        "condition": "dependency.type === 'database' && dependency.status !== 'healthy'",
        "description": "Database connectivity issues detected",
        "message": "Database {{dependency.name}} status is {{dependency.status}} (response time: {{dependency.responseTime}}ms)",
        "cooldown": 300000,
        "enabled": true,
        "actions": ["log", "notify"]
      }
    ],
    "performance_alerts": [
      {
        "name": "degraded_performance_trend",
        "severity": "medium",
        "condition": "healthTrend === 'declining' && consecutiveChecks >= 5",
        "description": "System performance is showing declining trend",
        "message": "System health trend is declining over the last {{consecutiveChecks}} checks",
        "cooldown": 1800000,
        "enabled": true,
        "actions": ["log", "notify"]
      },
      {
        "name": "multiple_degraded_sites",
        "severity": "high",
        "condition": "sites.filter(s => s.status === 'degraded').length >= 3",
        "description": "Multiple sites showing degraded performance",
        "message": "{{count}} sites are currently in degraded state",
        "cooldown": 600000,
        "enabled": true,
        "actions": ["log", "notify"]
      }
    ]
  },
  "alert_actions": {
    "log": {
      "enabled": true,
      "logLevel": "warn",
      "logFile": "/home/admin/deno-genesis/logs/alerts.log",
      "includeStackTrace": false,
      "includeSystemInfo": true
    },
    "notify": {
      "enabled": true,
      "methods": ["console", "webhook"],
      "console": {
        "enabled": true,
        "colorize": true,
        "includeTimestamp": true
      },
      "webhook": {
        "enabled": false,
        "urls": [],
        "timeout": 10000,
        "retries": 2,
        "headers": {
          "Content-Type": "application/json",
          "User-Agent": "DenoGenesis-HealthMonitor/2.1.0"
        }
      },
      "email": {
        "enabled": false,
        "recipients": [],
        "smtpHost": "",
        "smtpPort": 587,
        "smtpSecure": true,
        "smtpUser": "",
        "smtpPassword": ""
      }
    },
    "escalate": {
      "enabled": true,
      "escalationDelay": 900000,
      "maxEscalationLevel": 3,
      "escalationActions": [
        "additional_logging",
        "extended_monitoring",
        "automatic_restart_attempt"
      ]
    }
  },
  "reporting": {
    "enableDailyReports": true,
    "dailyReportTime": "02:00",
    "enableWeeklyReports": true,
    "weeklyReportDay": "sunday",
    "weeklyReportTime": "03:00",
    "reportFormat": "json",
    "reportPath": "/home/admin/deno-genesis/logs/reports/",
    "includeMetrics": true,
    "includeAlertSummary": true,
    "includePerformanceTrends": true,
    "retainReports": true,
    "reportRetentionDays": 90
  },
  "maintenance": {
    "enableMaintenanceMode": true,
    "maintenanceBypassHeader": "X-Maintenance-Bypass",
    "maintenanceBypassValue": "denogenesis-admin",
    "maintenanceStatusCode": 503,
    "maintenanceMessage": "System is currently under maintenance. Please try again later.",
    "disableAlertsInMaintenance": true,
    "maintenanceLogLevel": "info"
  },
  "integration": {
    "frameworkHealthEndpoint": "/_framework/health",
    "alertsEndpoint": "/_framework/alerts",
    "metricsEndpoint": "/_framework/metrics",
    "configReloadEndpoint": "/_framework/reload-config",
    "enableApiKeys": false,
    "apiKeys": [],
    "enableCors": true,
    "corsOrigins": ["*"]
  }
}